# HTTP服务器配置 - 后端API
server {
    listen 80;
    server_name back.nnbdc.com;

    if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD)$) {
        return 405;
    }

    # Let's Encrypt 证书验证目录（用于零停机续签）
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }

    # 暂时开放http访问后端, 等web前端废除后, 就把这段配置删除, 并且强制重定向到https
    location /socket.io/ {
       proxy_pass http://127.0.0.1:9090;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "upgrade";
       proxy_http_version 1.1;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header Host $host;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-Proto $scheme;
    }
    location / { 
       proxy_pass http://127.0.0.1:5200/;
       proxy_set_header Host $host;
       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
       proxy_set_header X-Real-IP $remote_addr;
       proxy_set_header X-Forwarded-Proto $scheme;
       proxy_next_upstream off;
    }

    # 强制重定向到 HTTPS（保护所有 API 和 WebSocket 连接）
    # location / {
    #     return 301 https://$server_name$request_uri;
    # }
}

# HTTPS服务器配置 - 后端API
server {
    listen 443 ssl http2;
    server_name back.nnbdc.com;

    if ($request_method !~ ^(GET|POST|PUT|DELETE|PATCH|OPTIONS|HEAD)$) {
        return 405;
    }

    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/back.nnbdc.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/back.nnbdc.com/privkey.pem;

    # SSL会话优化
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # 现代SSL协议配置（Mozilla Intermediate兼容性）
    # 支持 TLS 1.2 和 1.3，确保安全性和兼容性
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HTTP Strict Transport Security (HSTS)
    # 强制浏览器使用 HTTPS，包括所有子域名
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # WebSocket代理配置（Socket.IO）
    location /socket.io/ {
        proxy_pass http://127.0.0.1:9090;
        
        # WebSocket 升级所需头部
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        
        # 代理头部配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 后端API代理配置
    location / {
        proxy_pass http://127.0.0.1:5200/;
        
        # 代理头部配置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 禁用后端切换（保持连接稳定性）
        proxy_next_upstream off;
    }
}
